name: Uploading artifacts
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Clone code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Install MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'spring-database'
          mysql user: anbit
          mysql password: root
      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Install maven dependencies
        run: mvn clean install
      - name: Run unit test
        run: mvn test
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Clone code
        uses: actions/checkout@v3
      - name: Install MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'spring-database'
          mysql user: anbit
          mysql password: root
      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - name: Install maven dependencies
        run: mvn clean install
      - name: Run build
        run: mvn clean install -DskipTests
      - name: Deploy to server
        run: echo "Deploying ...."
      - name: Upload artifacts # Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: target
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy to server
        run: echo "Deploying ...."